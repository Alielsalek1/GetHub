@authService_HostAddress = http://localhost:5085

### Service Token Request (Successful - for microservices)
POST {{authService_HostAddress}}/api/service-auth/token
Content-Type: application/json
X-Service-Secret: a7f9c2e8b5d4a1c3f6e9b8d2a5c7f0e3

{
  "serviceName": "userService"
}

### Service Token Request (Invalid Secret - should return 401)
POST {{authService_HostAddress}}/api/service-auth/token
Content-Type: application/json
X-Service-Secret: invalid_secret

{
  "serviceName": "userService"
}

### Service Token Request (Missing Secret Header - should return 401)
POST {{authService_HostAddress}}/api/service-auth/token
Content-Type: application/json

{
  "serviceName": "userService"
}

### Validate Service Token
POST {{authService_HostAddress}}/api/service-auth/validate
Content-Type: application/json

{
  "token": "your_service_token_here"
}

### Refresh Service Token
POST {{authService_HostAddress}}/api/service-auth/refresh
Content-Type: application/json

{
  "currentToken": "your_current_service_token_here"
}

### Service Auth Health Check
GET {{authService_HostAddress}}/api/service-auth/health

### Register User (User Auth - separate controller)
POST {{authService_HostAddress}}/api/auth/register
Content-Type: application/json

{
  "email": "user@example.com",
  "username": "testuser",
  "password": "Test123!"
}
